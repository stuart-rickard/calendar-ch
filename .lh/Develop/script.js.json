{
    "sourceFile": "Develop/script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 119,
            "patches": [
                {
                    "date": 1638115497070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638418856808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+const allButtons = document.getElementsByClassName('test');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+        alert('clicked btn')\r\n+    })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638418979908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+        \r\n+\r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638419145731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,17 @@\n //uploadEvents\r\n //downloadEvents\r\n //listener\r\n \r\n+\r\n+\r\n const allButtons = document.getElementsByClassName('saveBtn');\r\n \r\n \r\n for(var i =0; i < allButtons.length; i++){\r\n     allButtons[i].addEventListener('click', function(){\r\n       \r\n-        \r\n+        alert('clicked btn')\r\n \r\n         // grab the sibilibgs of the save button\r\n \r\n         // save to localStorage\r\n@@ -19,19 +21,4 @@\n }\r\n \r\n \r\n \r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-const allButtons = document.getElementsByClassName('test');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-        alert('clicked btn')\r\n-    })\r\n-}\n-// opened to store code clips\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638419560615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,12 @@\n //uploadEvents\r\n //downloadEvents\r\n //listener\r\n \r\n+arrayEvents = {\r\n+    time: \"\";\r\n+    event: \"\";\r\n+}\r\n \r\n \r\n const allButtons = document.getElementsByClassName('saveBtn');\r\n \r\n@@ -13,8 +17,10 @@\n     allButtons[i].addEventListener('click', function(){\r\n       \r\n         alert('clicked btn')\r\n \r\n+        console.log(allButtons[i].parentNode.childNodes)\r\n+        \r\n         // grab the sibilibgs of the save button\r\n \r\n         // save to localStorage\r\n     })\r\n"
                },
                {
                    "date": 1638419585927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,11 @@\n //uploadEvents\r\n //downloadEvents\r\n //listener\r\n \r\n-arrayEvents = {\r\n-    time: \"\";\r\n-    event: \"\";\r\n-}\r\n \r\n \r\n+\r\n const allButtons = document.getElementsByClassName('saveBtn');\r\n \r\n \r\n for(var i =0; i < allButtons.length; i++){\r\n"
                },
                {
                    "date": 1638419760072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     allButtons[i].addEventListener('click', function(){\r\n       \r\n         alert('clicked btn')\r\n \r\n-        console.log(allButtons[i].parentNode.childNodes)\r\n+        console.log(this.parentNode)\r\n         \r\n         // grab the sibilibgs of the save button\r\n \r\n         // save to localStorage\r\n"
                },
                {
                    "date": 1638419825312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     allButtons[i].addEventListener('click', function(){\r\n       \r\n         alert('clicked btn')\r\n \r\n-        console.log(this.parentNode)\r\n+        console.log(this.parentNode.childNodes)\r\n         \r\n         // grab the sibilibgs of the save button\r\n \r\n         // save to localStorage\r\n"
                },
                {
                    "date": 1638419861330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+\r\n+\r\n+        console.log(this.parentNode.childNodes.find('textareas'))\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638419890767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+\r\n+\r\n+        console.log(this.parentNode.childNodes.find('textarea'))\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638419985566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+\r\n+\r\n+        console.log(this.parentNode.childNodes)\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420108521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,14 @@\n \r\n for(var i =0; i < allButtons.length; i++){\r\n     allButtons[i].addEventListener('click', function(){\r\n       \r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.parentNode.childNodes[3]\r\n \r\n+        console.log('hour', hour);\r\n \r\n-        console.log(this.parentNode.childNodes)\r\n+        console.log('event',event)\r\n         \r\n         // grab the sibilibgs of the save button\r\n \r\n         // save to localStorage\r\n@@ -24,85 +27,4 @@\n }\r\n \r\n \r\n \r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-\r\n-\r\n-        console.log(this.parentNode.childNodes.find('textarea'))\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-\r\n-\r\n-        console.log(this.parentNode.childNodes.find('textareas'))\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        alert('clicked btn')\r\n-\r\n-        console.log(this.parentNode.childNodes)\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n"
                },
                {
                    "date": 1638420266010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n       \r\n         const hour = this.parentNode.childNodes[1];\r\n         const event = this.parentNode.childNodes[3]\r\n \r\n-        console.log('hour', hour);\r\n+        console.log(hour);\r\n \r\n-        console.log('event',event)\r\n+        console.log(event)\r\n         \r\n         // grab the sibilibgs of the save button\r\n \r\n         // save to localStorage\r\n"
                },
                {
                    "date": 1638420341942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.parentNode.childNodes\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event)\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420470266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.parent;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event)\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420545868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event)\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420691227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(this.querySelector(\"::before\"));\r\n+        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420748026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(){\r\n+      \r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+        console.log(this.querySelector(\"::before\");        \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420777130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        e.preventDefault();\r\n+        const hour = this.parentNode.childNodes[1];\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638420892649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        e.preventDefault();\r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638455520874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638455613251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+//undo button (optional)\r\n+// color on entry; goes away if another box is clicked (native?)\r\n+\r\n+\r\n+\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638482750612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+// opened to store code clips\r\n+//clockChecker\r\n+//uploadEvents\r\n+//downloadEvents\r\n+//listener\r\n+//undo button (optional)\r\n+// color on entry; saves if another box is clicked\r\n+\r\n+// use onblur and/or onsubmit https://www.w3schools.com/tags/ref_eventattributes.asp\r\n+// looks like .description is used for event description?\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638487029268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638487064409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+dateInHeader.innerText = \"test\";\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1638487183183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader;\r\n+\r\n"
                },
                {
                    "date": 1638487197344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,6 +24,6 @@\n         // save to localStorage\r\n     })\r\n }\r\n \r\n-addDateToHeader;\r\n+addDateToHeader();\r\n \r\n"
                },
                {
                    "date": 1638488794730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = new Date();\r\n+console.log(rightNow);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638489365468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import dayjs from \"dayjs\";\r\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = new Date();\r\n+console.log(rightNow);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638489651178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490127390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490168622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490407783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format('LL');\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490449572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format('L LL');\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490567263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format(D MMMM, YYYY);\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490591141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format(D MMMM YYYY);\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490630453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format(D);\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490679884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format(\"D MMMM, YYYY\");\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490821223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = \"test\";\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = dayjs().format(\"dddd, MMMM D\");\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490897086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = ;\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638490940563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNow = dayjs();\r\n+console.log(rightNow);\r\n+console.log(rightNow.$L);\r\n+console.log(rightNow.$d.toLocaleDateString());\r\n+var todayForHeader = 0;\r\n+console.log(todayForHeader);\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638491411642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638491862741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName(time-block);\r\n+\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638491891735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638492337257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(allTimeBlocks[0].children[0].id);\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+\r\n"
                },
                {
                    "date": 1638492351900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(allTimeBlocks[0].children[0].id);\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638492833337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(allTimeBlocks[0].children[0].id);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id \" is before now\");\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638492842920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(allTimeBlocks[0].children[0].id);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id \" is before now\");\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638493066048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,11 @@\n var colorTimeBlocks = function(){\r\n     console.log(allTimeBlocks[0].children[0].id);\r\n     for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n         if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id \" is before now\");\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n         } else {\r\n-            console.log(allTimeBlocks[i].children[0].id \" is after now\");\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n         }\r\n     }\r\n }\r\n \r\n@@ -45,1185 +45,4 @@\n }\r\n \r\n addDateToHeader();\r\n colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(allTimeBlocks[0].children[0].id);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id \" is before now\");\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(allTimeBlocks[0].children[0].id);\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(allTimeBlocks[0].children[0].id);\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName(time-block);\r\n-\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = 0;\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = ;\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format(\"dddd, MMMM D\");\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format(\"D MMMM, YYYY\");\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format(D);\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format(D MMMM YYYY);\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format(D MMMM, YYYY);\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format('L LL');\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-var todayForHeader = dayjs().format('LL');\r\n-console.log(todayForHeader);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString());\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-console.log(rightNow.$L);\r\n-console.log(rightNow.$d.toLocaleDateString);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = dayjs();\r\n-console.log(rightNow);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-import dayjs from \"dayjs\";\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = new Date();\r\n-console.log(rightNow);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-var rightNow = new Date();\r\n-console.log(rightNow);\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = \"test\";\r\n-\r\n-}\r\n-\r\n-\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-dateInHeader.innerText = \"test\";\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-//undo button (optional)\r\n-// color on entry; saves if another box is clicked\r\n-\r\n-// use onblur and/or onsubmit https://www.w3schools.com/tags/ref_eventattributes.asp\r\n-// looks like .description is used for event description?\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-//undo button (optional)\r\n-// color on entry; goes away if another box is clicked (native?)\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        e.preventDefault();\r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        e.preventDefault();\r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-        console.log(this.querySelector(\"::before\");        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(this.querySelector(\"::before\"));\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event)\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.parent;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event)\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.parentNode.childNodes\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event)\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n-// opened to store code clips\r\n-//clockChecker\r\n-//uploadEvents\r\n-//downloadEvents\r\n-//listener\r\n-\r\n-\r\n-\r\n-\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(){\r\n-      \r\n-        const hour = this.parentNode.childNodes[1];\r\n-        const event = this.parentNode.childNodes[3]\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event)\r\n-        \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-\r\n-\r\n"
                },
                {
                    "date": 1638493111007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(allTimeBlocks[0].children[0].id);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638509223857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638538702739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"text-align: center; border-radius: 15px; past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638538775613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"time-block past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638538946915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"time-block\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638538965571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            // allTimeBlocks[i].children[1].className = \"time-block\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638538987134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"time-block past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638539024475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638539093433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n         if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n             console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n             // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"past\";\r\n+            allTimeBlocks[i].children[1].className = \"col-12 row time-block past\";\r\n         } else {\r\n             console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n         }\r\n     }\r\n@@ -48,407 +48,4 @@\n }\r\n \r\n addDateToHeader();\r\n colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"time-block past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            // allTimeBlocks[i].children[1].className = \"time-block\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"time-block\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"time-block past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"text-align: center; border-radius: 15px; past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(allTimeBlocks[0].children[0].id);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(allTimeBlocks[0].children[0].id);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638539301815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638539317361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+// colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638540574781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n"
                },
                {
                    "date": 1638540898823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas.onblur(console.log(\"blur\"));\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638541402034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas.addEventListener(\"blur\", blurEvent);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638541452647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas.addEventListener(\"blur\", blurEvent());\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638541600868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas.addEventListener(\"blur\", function(){\r\n+    console.log(\"blur\");\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638541650040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas[0].addEventListener(\"blur\", function(){\r\n+    console.log(\"blur\");\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638541799810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas[0].addEventListener(\"blur\", function(){\r\n+    console.log(\"blur\");\r\n+});\r\n+allTextAreas[1].onblur(function({\r\n+    console.log(\"blur2\");\r\n+}));\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638541857463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas[0].addEventListener(\"blur\", function(){\r\n+    console.log(\"blur\");\r\n+});\r\n+allTextAreas[1].onblur(function(){\r\n+    console.log(\"blur2\");\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638542070669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+allTextAreas[0].addEventListener(\"blur\", function(){\r\n+    console.log(\"blur\");\r\n+});\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638542320385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+});\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638542404201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638542492390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638542576490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638542701788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.text);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638543109503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638544809802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638567884233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+const emptyCalendar = [\r\n+    {date: 01/01/2020; hour: \"0800\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"0900\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1000\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1100\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1200\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1300\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1400\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1500\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1600\"; textValue: \"\"},\r\n+    {date: 01/01/2020; hour: \"1700\"; textValue: \"\"},\r\n+];\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638568611302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\"; textValue: \"\"},\r\n+    {hour: \"0900\"; textValue: \"\"},\r\n+    {hour: \"1000\"; textValue: \"\"},\r\n+    {hour: \"1100\"; textValue: \"\"},\r\n+    {hour: \"1200\"; textValue: \"\"},\r\n+    {hour: \"1300\"; textValue: \"\"},\r\n+    {hour: \"1400\"; textValue: \"\"},\r\n+    {hour: \"1500\"; textValue: \"\"},\r\n+    {hour: \"1600\"; textValue: \"\"},\r\n+    {hour: \"1700\"; textValue: \"\"}\r\n+];\r\n+const emptyCalendar = {\r\n+    date: 01/01/2020; \r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+\r\n+//set up a newDay\r\n+var newDaySetup = function()\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638568987952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\"; textValue: \"\"},\r\n+    {hour: \"0900\"; textValue: \"\"},\r\n+    {hour: \"1000\"; textValue: \"\"},\r\n+    {hour: \"1100\"; textValue: \"\"},\r\n+    {hour: \"1200\"; textValue: \"\"},\r\n+    {hour: \"1300\"; textValue: \"\"},\r\n+    {hour: \"1400\"; textValue: \"\"},\r\n+    {hour: \"1500\"; textValue: \"\"},\r\n+    {hour: \"1600\"; textValue: \"\"},\r\n+    {hour: \"1700\"; textValue: \"\"}\r\n+];\r\n+const emptyCalendarDate = {\r\n+    date: \"20200101\"; // dummy date that is in the past\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+var workingCalendarDate = emptyCalendarDate;\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+\r\n+//set up a newDay\r\n+var newDaySetup = function(){\r\n+    //upload calendar File\r\n+    //if today is already on file\r\n+        //upload today to working array\r\n+    //else\r\n+        //start with a blank date\r\n+            //today's date is blank\r\n+\r\n+}\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638569326156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,101 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\"; textValue: \"\"},\r\n+    {hour: \"0900\"; textValue: \"\"},\r\n+    {hour: \"1000\"; textValue: \"\"},\r\n+    {hour: \"1100\"; textValue: \"\"},\r\n+    {hour: \"1200\"; textValue: \"\"},\r\n+    {hour: \"1300\"; textValue: \"\"},\r\n+    {hour: \"1400\"; textValue: \"\"},\r\n+    {hour: \"1500\"; textValue: \"\"},\r\n+    {hour: \"1600\"; textValue: \"\"},\r\n+    {hour: \"1700\"; textValue: \"\"}\r\n+];\r\n+const emptyCalendarDate = {\r\n+    date: \"20200101\"; // dummy date that is in the past\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+var workingCalendarDate = emptyCalendarDate;\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+\r\n+//set up a newDay\r\n+var newDaySetup = function(){\r\n+    //download calendar File\r\n+    //if there's no file\r\n+        //upload a blank file\r\n+    //else\r\n+        //if today is already on file\r\n+            //upload today to working array\r\n+            //populate dom with events\r\n+        //else\r\n+            //add today to calendar file\r\n+                //today's date is blank\r\n+\r\n+}\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var blurEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n+}\r\n+\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+\r\n+\r\n+// TODO how to use onblur?\r\n+// allTextAreas[1].onblur(function(){\r\n+//     console.log(\"blur2\");\r\n+// });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638575103267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,127 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+\r\n+\r\n+var uploadNewEvent = function(){\r\n+    // update todaysEventsArray\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            // create todaysEventsArray\r\n+        }\r\n+    } else {\r\n+        // create todaysEventsArray\r\n+    };\r\n+};\r\n+\r\n+var updateHighScoresArray = function(initials,score){\r\n+    for ( i = 0 ; i < numberOfHighScores ; i++ ){\r\n+        if ( score > highScoresArray[i].score ) {\r\n+            highScoresArray.splice(i,0,{initials: initials, score: score});\r\n+            highScoresArray.pop();\r\n+            uploadHighScores();\r\n+            updateHighScoresInDOM();\r\n+            i = numberOfHighScores; // this ends the for loop\r\n+        };\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events\r\n+}\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+        }\r\n+    }\r\n+    //address transition to a new day\r\n+        // reset todaysEventsArray\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(e.target.HOUR, e.target.value);\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+colorTimeBlocks();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638662391054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n const allButtons = document.getElementsByClassName('saveBtn');\r\n const allTextAreas = document.getElementsByTagName('textarea');\r\n const allTimeBlocks = document.getElementsByClassName('time-block');\r\n const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var millisecondsToNextTimeCheck = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n \r\n \r\n var uploadNewEvent = function(){\r\n     // update todaysEventsArray\r\n@@ -82,8 +83,9 @@\n             // insert class change here\r\n             allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n         } else {\r\n             console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n         }\r\n     }\r\n     //address transition to a new day\r\n         // reset todaysEventsArray\r\n@@ -121,7 +123,16 @@\n     allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n }\r\n \r\n addDateToHeader();\r\n-colorTimeBlocks();\r\n+// do this every minute - call display TodaysEVents if new day // improve by updating global variable when to check next\r\n+setInterval(colorTimeBlocks(), \r\n\\ No newline at end of file\n+    millisecondsToNextTimeCheck);\r\n displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\n+activateEventListenersForTextAreas();\r\n+var counter = 10;\r\n+var myFunction = function() {\r\n+    counter *= 10;\r\n+    console.log(counter);\r\n+    setTimeout(myFunction, counter);\r\n+}\r\n+setTimeout(myFunction, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638663894155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,149 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+//var millisecondsToNextTimeCheck = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events\r\n+    \r\n+}\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+        }\r\n+    }\r\n+    //address transition to a new day\r\n+        // reset todaysEventsArray\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(e.target.HOUR, e.target.value);\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+// do this every minute - call display TodaysEVents if new day // improve by updating global variable when to check next\r\n+setInterval(colorTimeBlocks(), \r\n+    millisecondsToNextTimeCheck);\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+var counter = 10;\r\n+var myFunction = function() {\r\n+    counter *= 10;\r\n+    console.log(counter);\r\n+    setTimeout(myFunction, counter);\r\n+}\r\n+setTimeout(myFunction, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638664044777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+//var millisecondsToNextTimeCheck = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        \r\n+    }\r\n+}\r\n+\r\n+var downloadCurrentTime = function(){\r\n+    \r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n+\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+console.log(rightNowInMilitary);\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+        }\r\n+    }\r\n+    //address transition to a new day\r\n+        // reset todaysEventsArray\r\n+}\r\n+\r\n+for(var i =0; i < allButtons.length; i++){\r\n+    allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+        const hour = this.parentNode.childNodes[1].innerText;\r\n+        const event = this.previousElementSibling;\r\n+\r\n+        console.log(hour);\r\n+\r\n+        console.log(event);\r\n+     \r\n+        // grab the sibilibgs of the save button\r\n+\r\n+        // save to localStorage\r\n+    })\r\n+}\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(e.target.HOUR, e.target.value);\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+// do this every minute - call display TodaysEVents if new day // improve by updating global variable when to check next\r\n+setInterval(colorTimeBlocks(), \r\n+    millisecondsToNextTimeCheck);\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+var counter = 10;\r\n+var myFunction = function() {\r\n+    counter *= 10;\r\n+    console.log(counter);\r\n+    setTimeout(myFunction, counter);\r\n+}\r\n+setTimeout(myFunction, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638667261125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn');\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(e.target.HOUR, e.target.value);\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638667567647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray;\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638668442980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+\r\n+for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638668533024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638668589295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+\r\n+var interval = setInterval( colorTimeBlocks, intervalLength )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638668676447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+\r\n+var interval = setInterval( colorTimeBlocks, intervalLength )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638668816877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,2807 +159,6 @@\n \r\n addDateToHeader();\r\n displayTodaysEvents();\r\n activateEventListenersForTextAreas();\r\n-\r\n-var interval = setInterval( colorTimeBlocks, intervalLength )\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-\r\n-var interval = setInterval( colorTimeBlocks, intervalLength )\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(e.target.HOUR, e.target.value);\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-//var millisecondsToNextTimeCheck = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        \r\n-    }\r\n-}\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-        }\r\n-    }\r\n-    //address transition to a new day\r\n-        // reset todaysEventsArray\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(e.target.HOUR, e.target.value);\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-// do this every minute - call display TodaysEVents if new day // improve by updating global variable when to check next\r\n-setInterval(colorTimeBlocks(), \r\n-    millisecondsToNextTimeCheck);\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-var counter = 10;\r\n-var myFunction = function() {\r\n-    counter *= 10;\r\n-    console.log(counter);\r\n-    setTimeout(myFunction, counter);\r\n-}\r\n-setTimeout(myFunction, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-//var millisecondsToNextTimeCheck = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events\r\n-    \r\n-}\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-        }\r\n-    }\r\n-    //address transition to a new day\r\n-        // reset todaysEventsArray\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(e.target.HOUR, e.target.value);\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-// do this every minute - call display TodaysEVents if new day // improve by updating global variable when to check next\r\n-setInterval(colorTimeBlocks(), \r\n-    millisecondsToNextTimeCheck);\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-var counter = 10;\r\n-var myFunction = function() {\r\n-    counter *= 10;\r\n-    console.log(counter);\r\n-    setTimeout(myFunction, counter);\r\n-}\r\n-setTimeout(myFunction, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var millisecondsToNextTimeCheck = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-\r\n-var uploadNewEvent = function(){\r\n-    // update todaysEventsArray\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            // create todaysEventsArray\r\n-        }\r\n-    } else {\r\n-        // create todaysEventsArray\r\n-    };\r\n-};\r\n-\r\n-var updateHighScoresArray = function(initials,score){\r\n-    for ( i = 0 ; i < numberOfHighScores ; i++ ){\r\n-        if ( score > highScoresArray[i].score ) {\r\n-            highScoresArray.splice(i,0,{initials: initials, score: score});\r\n-            highScoresArray.pop();\r\n-            uploadHighScores();\r\n-            updateHighScoresInDOM();\r\n-            i = numberOfHighScores; // this ends the for loop\r\n-        };\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events\r\n-}\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-        }\r\n-    }\r\n-    //address transition to a new day\r\n-        // reset todaysEventsArray\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(e.target.HOUR, e.target.value);\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-// do this every minute - call display TodaysEVents if new day // improve by updating global variable when to check next\r\n-setInterval(colorTimeBlocks(), \r\n-    millisecondsToNextTimeCheck);\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-var counter = 10;\r\n-var myFunction = function() {\r\n-    counter *= 10;\r\n-    console.log(counter);\r\n-    setTimeout(myFunction, counter);\r\n-}\r\n-setTimeout(myFunction, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\"; textValue: \"\"},\r\n-    {hour: \"0900\"; textValue: \"\"},\r\n-    {hour: \"1000\"; textValue: \"\"},\r\n-    {hour: \"1100\"; textValue: \"\"},\r\n-    {hour: \"1200\"; textValue: \"\"},\r\n-    {hour: \"1300\"; textValue: \"\"},\r\n-    {hour: \"1400\"; textValue: \"\"},\r\n-    {hour: \"1500\"; textValue: \"\"},\r\n-    {hour: \"1600\"; textValue: \"\"},\r\n-    {hour: \"1700\"; textValue: \"\"}\r\n-];\r\n-const emptyCalendarDate = {\r\n-    date: \"20200101\"; // dummy date that is in the past\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-var workingCalendarDate = emptyCalendarDate;\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-\r\n-//set up a newDay\r\n-var newDaySetup = function(){\r\n-    //download calendar File\r\n-    //if there's no file\r\n-        //upload a blank file\r\n-    //else\r\n-        //if today is already on file\r\n-            //upload today to working array\r\n-            //populate dom with events\r\n-        //else\r\n-            //add today to calendar file\r\n-                //today's date is blank\r\n-\r\n-}\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\"; textValue: \"\"},\r\n-    {hour: \"0900\"; textValue: \"\"},\r\n-    {hour: \"1000\"; textValue: \"\"},\r\n-    {hour: \"1100\"; textValue: \"\"},\r\n-    {hour: \"1200\"; textValue: \"\"},\r\n-    {hour: \"1300\"; textValue: \"\"},\r\n-    {hour: \"1400\"; textValue: \"\"},\r\n-    {hour: \"1500\"; textValue: \"\"},\r\n-    {hour: \"1600\"; textValue: \"\"},\r\n-    {hour: \"1700\"; textValue: \"\"}\r\n-];\r\n-const emptyCalendarDate = {\r\n-    date: \"20200101\"; // dummy date that is in the past\r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-var workingCalendarDate = emptyCalendarDate;\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-\r\n-//set up a newDay\r\n-var newDaySetup = function(){\r\n-    //upload calendar File\r\n-    //if today is already on file\r\n-        //upload today to working array\r\n-    //else\r\n-        //start with a blank date\r\n-            //today's date is blank\r\n-\r\n-}\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\"; textValue: \"\"},\r\n-    {hour: \"0900\"; textValue: \"\"},\r\n-    {hour: \"1000\"; textValue: \"\"},\r\n-    {hour: \"1100\"; textValue: \"\"},\r\n-    {hour: \"1200\"; textValue: \"\"},\r\n-    {hour: \"1300\"; textValue: \"\"},\r\n-    {hour: \"1400\"; textValue: \"\"},\r\n-    {hour: \"1500\"; textValue: \"\"},\r\n-    {hour: \"1600\"; textValue: \"\"},\r\n-    {hour: \"1700\"; textValue: \"\"}\r\n-];\r\n-const emptyCalendar = {\r\n-    date: 01/01/2020; \r\n-    arrayHourAndText: emptyHourAndTextArray;\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-\r\n-//set up a newDay\r\n-var newDaySetup = function()\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-const emptyCalendar = [\r\n-    {date: 01/01/2020; hour: \"0800\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"0900\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1000\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1100\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1200\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1300\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1400\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1500\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1600\"; textValue: \"\"},\r\n-    {date: 01/01/2020; hour: \"1700\"; textValue: \"\"},\r\n-];\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.text);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", blurEvent);\r\n-}\r\n-\r\n-\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-});\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas[0].addEventListener(\"blur\", function(){\r\n-    console.log(\"blur\");\r\n-});\r\n-\r\n-// TODO how to use onblur?\r\n-// allTextAreas[1].onblur(function(){\r\n-//     console.log(\"blur2\");\r\n-// });\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas[0].addEventListener(\"blur\", function(){\r\n-    console.log(\"blur\");\r\n-});\r\n-allTextAreas[1].onblur(function(){\r\n-    console.log(\"blur2\");\r\n-});\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas[0].addEventListener(\"blur\", function(){\r\n-    console.log(\"blur\");\r\n-});\r\n-allTextAreas[1].onblur(function({\r\n-    console.log(\"blur2\");\r\n-}));\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas[0].addEventListener(\"blur\", function(){\r\n-    console.log(\"blur\");\r\n-});\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas.addEventListener(\"blur\", function(){\r\n-    console.log(\"blur\");\r\n-});\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas.addEventListener(\"blur\", blurEvent());\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-var blurEvent = function(e){\r\n-    console.log(\"blur\");\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas.addEventListener(\"blur\", blurEvent);\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-allTextAreas.onblur(console.log(\"blur\"));\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-// colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\r\n-\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks\r\n-\r\n-\r\n-var downloadCurrentTime = function(){\r\n-    \r\n-}\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format(\"dddd, MMMM D\");\r\n-\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-console.log(rightNowInMilitary);\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-12 row time-block past\";\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-for(var i =0; i < allButtons.length; i++){\r\n-    allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-        const hour = this.parentNode.childNodes[1].innerText;\r\n-        const event = this.previousElementSibling;\r\n-\r\n-        console.log(hour);\r\n-\r\n-        console.log(event);\r\n-     \r\n-        // grab the sibilibgs of the save button\r\n-\r\n-        // save to localStorage\r\n-    })\r\n-}\r\n-\r\n-addDateToHeader();\r\n-colorTimeBlocks();\n\\ No newline at end of file\n+debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n"
                },
                {
                    "date": 1638668980754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+debugger;\r\n+//var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+var counter = 10;\r\n+var myFunction = function(){\r\n+    clearInterval(interval);\r\n+    console.log(\"setInterval\");\r\n+    counter *= 2;\r\n+    interval = setInterval(myFunction, counter);\r\n+}\r\n+var interval = setInterval(myFunction, counter);\r\n+\r\n+var counter = 10;\r\n+var myFunction2 = function() {\r\n+    counter *= 2.1;\r\n+    console.log(\"setTimeout\");\r\n+    setTimeout(myFunction2, counter);\r\n+}\r\n+setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638669124153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(ss);\r\n+        var minutes = 60 - dayjs().format(mm);\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638669170871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638669538346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,183 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638669906547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == today ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638670140132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(YYYYMMDD) ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638675331123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+            populateStoredEventsToDOM(todaysEventsArray);\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638675587924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638675995126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638676368428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638677172506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", // code todays date here\r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638678672670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638678962779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = 4000;//( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679006689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = 4000;//( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679064528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679135278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679176291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679200111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n \r\n var colorTimeBlocks = function(){\r\n     console.log(\"color time blocks\");\r\n     console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n+    rightNowInMilitary = \"1159\"; // remember to delete this\r\n     var intervalToNextColor = function() {\r\n         // how much time is there to the next hour; check second and minutes separately, then combine\r\n         var seconds = 60 - dayjs().format(\"ss\");\r\n         var minutes = 60 - dayjs().format(\"mm\");\r\n@@ -189,3160 +189,5 @@\n //     counter *= 2.1;\r\n //     console.log(\"setTimeout\");\r\n //     setTimeout(myFunction2, counter);\r\n // }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", \r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    // debugger;\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    // debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    // debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        // debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            // debugger;\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-//debugger;\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // debugger;\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    // debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        // debugger;\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", \r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    // debugger;\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    // debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    // debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        // debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            // debugger;\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-//debugger;\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // debugger;\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    // debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        // debugger;\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", \r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    // debugger;\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    // debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    // debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        // debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            // debugger;\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-//debugger;\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // debugger;\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = 4000;//( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    // debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        // debugger;\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", \r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    // debugger;\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    // debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    // debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        // debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            // debugger;\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-debugger;\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // debugger;\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = 4000;//( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    // debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        // debugger;\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", \r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    // debugger;\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    // debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    // debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        // debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            // debugger;\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-debugger;\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // debugger;\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    // debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        // debugger;\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    debugger;\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            debugger;\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-debugger;\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        debugger;\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        debugger;\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    debugger;\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    debugger;\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    debugger;\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        console.log(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == dayjs().format(YYYYMMDD) ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        debugger;\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    console.log(\"color time blocks\");\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(\"ss\");\r\n-        var minutes = 60 - dayjs().format(\"mm\");\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-    }\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-//debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-// var counter = 10;\r\n-// var myFunction = function(){\r\n-//     clearInterval(interval);\r\n-//     console.log(\"setInterval\");\r\n-//     counter *= 2;\r\n-//     interval = setInterval(myFunction, counter);\r\n-// }\r\n-// var interval = setInterval(myFunction, counter);\r\n-\r\n-// var counter = 10;\r\n-// var myFunction2 = function() {\r\n-//     counter *= 2.1;\r\n-//     console.log(\"setTimeout\");\r\n-//     setTimeout(myFunction2, counter);\r\n-// }\r\n-// setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-debugger;\r\n-//var interval = setInterval( colorTimeBlocks, intervalLength );\r\n-\r\n-var counter = 10;\r\n-var myFunction = function(){\r\n-    clearInterval(interval);\r\n-    console.log(\"setInterval\");\r\n-    counter *= 2;\r\n-    interval = setInterval(myFunction, counter);\r\n-}\r\n-var interval = setInterval(myFunction, counter);\r\n-\r\n-var counter = 10;\r\n-var myFunction2 = function() {\r\n-    counter *= 2.1;\r\n-    console.log(\"setTimeout\");\r\n-    setTimeout(myFunction2, counter);\r\n-}\r\n-setTimeout(myFunction2, counter);\n-const emptyHourAndTextArray = [\r\n-    {hour: \"0800\", textValue: \"\"},\r\n-    {hour: \"0900\", textValue: \"\"},\r\n-    {hour: \"1000\", textValue: \"\"},\r\n-    {hour: \"1100\", textValue: \"\"},\r\n-    {hour: \"1200\", textValue: \"\"},\r\n-    {hour: \"1300\", textValue: \"\"},\r\n-    {hour: \"1400\", textValue: \"\"},\r\n-    {hour: \"1500\", textValue: \"\"},\r\n-    {hour: \"1600\", textValue: \"\"},\r\n-    {hour: \"1700\", textValue: \"\"}\r\n-];\r\n-var todaysEventsArray = {\r\n-    date: \"\", // code todays date here\r\n-    arrayHourAndText: emptyHourAndTextArray\r\n-};\r\n-const dateInHeader = document.getElementById(\"currentDay\");\r\n-const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n-const allTextAreas = document.getElementsByTagName('textarea');\r\n-const allTimeBlocks = document.getElementsByClassName('time-block');\r\n-const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n-var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n-\r\n-// var provideTimeInfo = function(format){\r\n-//     switch (format) {\r\n-//         case \"date\":\r\n-//             return dayjs().format(\"YYYYMMDD\");\r\n-//         case \"\":\r\n-//             dayjs().format(\"dddd, MMMM D\");\r\n-//         case \"\":\r\n-\r\n-//     }\r\n-// }\r\n-\r\n-\r\n-var createEmptyTodaysEventsArray = function(){\r\n-    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n-    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n-}\r\n-\r\n-var uploadNewEvent = function(hour,text){\r\n-    // update todaysEventsArray\r\n-    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n-        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n-            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n-        }\r\n-    }\r\n-    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n-};\r\n-\r\n-// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n-var downloadTodaysEvents = function(){\r\n-    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n-    // check whether localStorage has today's events\r\n-    if ( localStorageDownload !== null ){\r\n-        localStorageDownload = JSON.parse(localStorageDownload);\r\n-        if ( localStorageDownload.date == today ){\r\n-            todaysEventsArray = localStorageDownload;\r\n-            populateStoredEventsToDOM(todaysEventsArray);\r\n-        } else {\r\n-            createEmptyTodaysEventsArray();\r\n-        }\r\n-    } else {\r\n-        createEmptyTodaysEventsArray();\r\n-    };\r\n-};\r\n-\r\n-var displayTodaysEvents = function(){\r\n-    //download calendar File\r\n-    downloadTodaysEvents();\r\n-    //populate dom with saved events, if any\r\n-    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n-        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n-            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-// var downloadCurrentTime = function(){\r\n-    \r\n-// }\r\n-\r\n-var addDateToHeader = function(){\r\n-    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n-}\r\n-\r\n-var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n-\r\n-var colorTimeBlocks = function(){\r\n-    rightNowInMilitary = \"1130\"; // remember to delete this\r\n-    var intervalToNextColor = function() {\r\n-        // how much time is there to the next hour; check second and minutes separately, then combine\r\n-        var seconds = 60 - dayjs().format(ss);\r\n-        var minutes = 60 - dayjs().format(mm);\r\n-        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n-        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n-        return intervalInMilliseconds;\r\n-    }\r\n-    // var intervalToNextColor = 2000; // placeholder \r\n-    clearInterval(interval);\r\n-    console.log(\"in colorTimeBlocks\");    \r\n-    console.log(rightNowInMilitary);\r\n-    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n-        // replace with switch\r\n-        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n-            // insert class change here\r\n-            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n-            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n-                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n-            }\r\n-        } else {\r\n-            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n-            // if not in current hour, show as future, otherwise current\r\n-            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n-            \r\n-        }\r\n-    }\r\n-\r\n-    //address transition to a new day\r\n-    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n-        displayTodaysEvents();\r\n-    };\r\n-    \r\n-    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n-}\r\n-\r\n-// for(var i =0; i < allButtons.length; i++){\r\n-//     allButtons[i].addEventListener('click', function(e){\r\n-        \r\n-//         const hour = this.parentNode.childNodes[1].innerText;\r\n-//         const event = this.previousElementSibling;\r\n-\r\n-//         console.log(hour);\r\n-\r\n-//         console.log(event);\r\n-     \r\n-//         // grab the sibilibgs of the save button\r\n-\r\n-//         // save to localStorage\r\n-//     })\r\n-// }\r\n-\r\n-var newEvent = function(e){\r\n-    console.log(\"blur\");\r\n-    console.log(e.target);\r\n-    console.log(e.target.name);\r\n-    console.log(e.target.value);\r\n-    //user confirmation stuff - change button color or whatever\r\n-    //add / replace existing event\r\n-    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n-    //save to workingCalDate\r\n-    //upload to localStorage\r\n-}\r\n-var activateEventListenersForTextAreas = function() {\r\n-    for ( i=0 ; i < allTextAreas.length; i++){\r\n-    allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n-}\r\n-\r\n-addDateToHeader();\r\n-displayTodaysEvents();\r\n-activateEventListenersForTextAreas();\r\n-debugger;\r\n-var interval = setInterval( colorTimeBlocks, intervalLength );\n\\ No newline at end of file\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679214964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    // debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638679992554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[0].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[0].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[0].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638680589266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638680663858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target.id);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(\"0900\", e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638680680918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    console.log(\"blur\");\r\n+    console.log(e.target.id);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(e.target.id, e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638681311419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,197 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allButtons = document.getElementsByClassName('saveBtn'); // delete unless coded for\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+const numberOfWorkHours = 9; //this needs to match the number of time blocks  // consider deleting\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<numberOfWorkHours; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < numberOfWorkHours; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<numberOfWorkHours ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    e.preventDefault();\r\n+    console.log(\"blur\");\r\n+    console.log(e.target.id);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(e.target.id, e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638683097172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,195 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+var intervalLength = 1000; // I wanted this to be long enough that the function has time to reset this variable - one second should be plenty\r\n+\r\n+// var provideTimeInfo = function(format){\r\n+//     switch (format) {\r\n+//         case \"date\":\r\n+//             return dayjs().format(\"YYYYMMDD\");\r\n+//         case \"\":\r\n+//             dayjs().format(\"dddd, MMMM D\");\r\n+//         case \"\":\r\n+\r\n+//     }\r\n+// }\r\n+\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<allTimeBlocks.length; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < allTimeBlocks.length; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<allTimeBlocks.length ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    e.preventDefault();\r\n+    console.log(\"blur\");\r\n+    console.log(e.target.id);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(e.target.id, e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, intervalLength );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638683279514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    // debugger;\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    console.log(hour + \"hour\");\r\n+    console.log(\"text: \" + text)\r\n+    debugger;\r\n+    for ( i=0 ; i<allTimeBlocks.length; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    // debugger;\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        console.log(localStorageDownload);\r\n+        // debugger;\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            // debugger;\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < allTimeBlocks.length; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    console.log(\"color time blocks\");\r\n+    console.log(dayjs().format(\"YYYY MM DD mm ss\"));\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    console.log(\"in colorTimeBlocks\");    \r\n+    console.log(rightNowInMilitary);\r\n+    for ( i=0 ; i<allTimeBlocks.length ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is before now\");\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            console.log(allTimeBlocks[i].children[1].id + \" is after now\");\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    // debugger;\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    e.preventDefault();\r\n+    console.log(\"blur\");\r\n+    console.log(e.target.id);\r\n+    console.log(e.target.name);\r\n+    console.log(e.target.value);\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    debugger;\r\n+    uploadNewEvent(e.target.id, e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+//debugger;\r\n+var interval = setInterval( colorTimeBlocks, 0 );\r\n+\r\n+// var counter = 10;\r\n+// var myFunction = function(){\r\n+//     clearInterval(interval);\r\n+//     console.log(\"setInterval\");\r\n+//     counter *= 2;\r\n+//     interval = setInterval(myFunction, counter);\r\n+// }\r\n+// var interval = setInterval(myFunction, counter);\r\n+\r\n+// var counter = 10;\r\n+// var myFunction2 = function() {\r\n+//     counter *= 2.1;\r\n+//     console.log(\"setTimeout\");\r\n+//     setTimeout(myFunction2, counter);\r\n+// }\r\n+// setTimeout(myFunction2, counter);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638683527836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    debugger;\r\n+    for ( i=0 ; i<allTimeBlocks.length; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < allTimeBlocks.length; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// var downloadCurrentTime = function(){\r\n+    \r\n+// }\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+//debugger;\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    rightNowInMilitary = \"1201\"; // remember to delete this\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // debugger;\r\n+        // calculate the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    // var intervalToNextColor = 2000; // placeholder \r\n+    clearInterval(interval);\r\n+    for ( i=0 ; i<allTimeBlocks.length ; i++ ){\r\n+        // replace with switch\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            // insert class change here\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            // if not in current hour, show as future, otherwise current\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+            \r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        // debugger;\r\n+        displayTodaysEvents();\r\n+    };\r\n+    \r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+// for(var i =0; i < allButtons.length; i++){\r\n+//     allButtons[i].addEventListener('click', function(e){\r\n+        \r\n+//         const hour = this.parentNode.childNodes[1].innerText;\r\n+//         const event = this.previousElementSibling;\r\n+\r\n+//         console.log(hour);\r\n+\r\n+//         console.log(event);\r\n+     \r\n+//         // grab the sibilibgs of the save button\r\n+\r\n+//         // save to localStorage\r\n+//     })\r\n+// }\r\n+\r\n+var newEvent = function(e){\r\n+    e.preventDefault();\r\n+    //user confirmation stuff - change button color or whatever\r\n+    //add / replace existing event\r\n+    uploadNewEvent(e.target.id, e.target.value); //e.target.HOUR\r\n+    //save to workingCalDate\r\n+    //upload to localStorage\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+var interval = setInterval( colorTimeBlocks, 0 );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638683875914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    debugger;\r\n+    for ( i=0 ; i<allTimeBlocks.length; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < allTimeBlocks.length; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    var intervalToNextColor = function() {\r\n+        // how much time is there to the next hour; check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // set interval to the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    clearInterval(interval);\r\n+    for ( i=0 ; i<allTimeBlocks.length ; i++ ){\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            // color changes are made by changing the class\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+        }\r\n+    }\r\n+\r\n+    //address transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        displayTodaysEvents();\r\n+    };\r\n+    // update colors two seconds after the hour changes\r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+var newEvent = function(e){\r\n+    e.preventDefault();\r\n+    // add / replace existing event\r\n+    uploadNewEvent(e.target.id, e.target.value);\r\n+}\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+var interval = setInterval( colorTimeBlocks, 0 );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638684152080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,116 @@\n+const emptyHourAndTextArray = [\r\n+    {hour: \"0800\", textValue: \"\"},\r\n+    {hour: \"0900\", textValue: \"\"},\r\n+    {hour: \"1000\", textValue: \"\"},\r\n+    {hour: \"1100\", textValue: \"\"},\r\n+    {hour: \"1200\", textValue: \"\"},\r\n+    {hour: \"1300\", textValue: \"\"},\r\n+    {hour: \"1400\", textValue: \"\"},\r\n+    {hour: \"1500\", textValue: \"\"},\r\n+    {hour: \"1600\", textValue: \"\"},\r\n+    {hour: \"1700\", textValue: \"\"}\r\n+];\r\n+var todaysEventsArray = {\r\n+    date: \"\", \r\n+    arrayHourAndText: emptyHourAndTextArray\r\n+};\r\n+const dateInHeader = document.getElementById(\"currentDay\");\r\n+const allTextAreas = document.getElementsByTagName('textarea');\r\n+const allTimeBlocks = document.getElementsByClassName('time-block');\r\n+\r\n+var createEmptyTodaysEventsArray = function(){\r\n+    todaysEventsArray.date = dayjs().format(\"YYYYMMDD\");\r\n+    todaysEventsArray.arrayHourAndText = emptyHourAndTextArray;\r\n+}\r\n+\r\n+var uploadNewEvent = function(hour,text){\r\n+    // update todaysEventsArray\r\n+    debugger;\r\n+    for ( i=0 ; i<allTimeBlocks.length; i++ ){\r\n+        if (todaysEventsArray.arrayHourAndText[i].hour == hour){\r\n+            todaysEventsArray.arrayHourAndText[i].textValue = text;\r\n+        }\r\n+    }\r\n+    localStorage.setItem(\"todaysEvents\", JSON.stringify(todaysEventsArray));\r\n+};\r\n+\r\n+// if todays events are in local storage, download them; otherwise create a new, empty TodaysEventsArray\r\n+var downloadTodaysEvents = function(){\r\n+    var localStorageDownload = localStorage.getItem(\"todaysEvents\");\r\n+    // check whether localStorage has today's events\r\n+    if ( localStorageDownload !== null ){\r\n+        localStorageDownload = JSON.parse(localStorageDownload);\r\n+        if ( localStorageDownload.date == dayjs().format(\"YYYYMMDD\") ){\r\n+            todaysEventsArray = localStorageDownload;\r\n+        } else {\r\n+            createEmptyTodaysEventsArray();\r\n+        }\r\n+    } else {\r\n+        createEmptyTodaysEventsArray();\r\n+    };\r\n+};\r\n+\r\n+var displayTodaysEvents = function(){\r\n+    //download calendar File\r\n+    downloadTodaysEvents();\r\n+    //populate dom with saved events, if any\r\n+    for ( i = 0; i < allTimeBlocks.length; i++ ){\r\n+        if ( todaysEventsArray.arrayHourAndText[i].textValue ) {\r\n+            allTimeBlocks[i].children[1].value = todaysEventsArray.arrayHourAndText[i].textValue;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+var addDateToHeader = function(){\r\n+    dateInHeader.innerText = dayjs().format( \"dddd, MMMM D\" )\r\n+}\r\n+\r\n+var rightNowInMilitary = dayjs().format(\"HHmm\");\r\n+\r\n+var colorTimeBlocks = function(){\r\n+    // this sub-function determines how much time is there to the next hour\r\n+    var intervalToNextColor = function() {\r\n+        // check second and minutes separately, then combine\r\n+        var seconds = 60 - dayjs().format(\"ss\");\r\n+        var minutes = 60 - dayjs().format(\"mm\");\r\n+        // set interval to the amount of time to the next hour plus two seconds to be sure that we are checking after the new hour has happened\r\n+        var intervalInMilliseconds = ( 2000 + ( seconds * 1000 ) + ( minutes * 60 * 1000 ));\r\n+        return intervalInMilliseconds;\r\n+    }\r\n+    clearInterval(interval);\r\n+    for ( i=0 ; i<allTimeBlocks.length ; i++ ){\r\n+        if ( allTimeBlocks[i].children[1].id < rightNowInMilitary ){\r\n+            // color changes are made by changing the class\r\n+            allTimeBlocks[i].children[1].className = \"col-9 past\";\r\n+            if ( ( rightNowInMilitary - allTimeBlocks[i].children[1].id ) < 60 ) {\r\n+                allTimeBlocks[i].children[1].className = \"col-9 present\";\r\n+            }\r\n+        } else {\r\n+            allTimeBlocks[i].children[1].className = \"col-9 future\";\r\n+        }\r\n+    }\r\n+    // reset upon transition to a new day\r\n+    if ( todaysEventsArray.date != dayjs().format(\"YYYYMMDD\") ) {\r\n+        addDateToHeader();\r\n+        displayTodaysEvents();\r\n+    };\r\n+    // update colors two seconds after the hour changes\r\n+    interval = setInterval( colorTimeBlocks, intervalToNextColor() );\r\n+}\r\n+\r\n+var newEvent = function(e){\r\n+    e.preventDefault();\r\n+    // add / replace existing event\r\n+    uploadNewEvent(e.target.id, e.target.value);\r\n+}\r\n+\r\n+var activateEventListenersForTextAreas = function() {\r\n+    for ( i=0 ; i < allTextAreas.length; i++){\r\n+        allTextAreas[i].addEventListener(\"blur\", newEvent);\r\n+    }\r\n+}\r\n+\r\n+addDateToHeader();\r\n+displayTodaysEvents();\r\n+activateEventListenersForTextAreas();\r\n+var interval = setInterval( colorTimeBlocks, 0 );\n\\ No newline at end of file\n"
                }
            ],
            "date": 1638115497070,
            "name": "Commit-0",
            "content": "// opened to store code clips\r\n"
        }
    ]
}